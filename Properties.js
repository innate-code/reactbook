// Ваши компоненты получают свойства и в зависимости от их значений по-разному выводятся на экран или ведут себя в приложении. 
// Все свойства доступны через объект this.props. Рассмотрим пример:

var Component = React.createClass({
	render: function() {
		return React.DOM.span(null, "My name is" + this.props.name);
	}
});

// Передача свойства при отображении компонента выглядит следующим образом:

ReactDOM.render(
	React.createElement(Component, {
		name: "Denis"
	}),
	document.getElementById("app")
);

//Свойство this.props следует считать пригодным только для чтения. 
// Свойства можно с успехом применять для переноса настроек из родительских компонентов в дочерние (и, как будет показано далее, из дочерних компонентов — в родительские). 
// Если вас все же что-то подстегивает назначить свойство с применением this.props, просто воспользуйтесь вместо этого дополнительными переменными или свойствами спецификации объекта вашего компонента (как в образце this.thing в противоположность образцу this.props.thing). 
// На деле в браузерах, отвечающих спецификации ECMAScript5, вам не захочется видоизменять свойство this.props, поскольку: > Object.isFrozen(this.props) === true; // истина
